<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>
    <!-- 引入外部mysql配置文件 -->
    <properties resource="sql.properties"></properties>
    <!-- 配置mybatis的log实现为log4j -->
    <settings>
        <setting name="logImpl" value="LOG4J"/>
    </settings>

    <environments default="development">
        <environment id="development">
            <!--
            MyBatis 中有两种类型的事务管理器（也就是 type="[JDBC|MANAGED]"）
            1. JDBC （JdbcTransactionFactory）– 这个配置直接使用了 JDBC 的提交和回滚设施，它依赖从数据源获得的连接来管理事务作用域。
            2. MANAGED （ManagedTransactionFactory）– 这个配置几乎没做什么。它从不提交或回滚一个连接，而是让容器来管理事务的整个生命周期（比如 JEE 应用服务器的上下文）。
            默认情况下它会关闭连接。然而一些容器并不希望连接被关闭，因此需要将 closeConnection 属性设置为 false 来阻止默认的关闭行为
            -->
            <!--<transactionManager type="JDBC"/>-->
            <!--
            <transactionManager type="MANAGED">
                <property name="closeConnection" value="false"/>
            </transactionManager>
            -->
            <!--自定义事物-->
            <transactionManager type="com.zbcn.mybatis.transaction.CustomTransactionFactory"/>
            <!-- mybatis提供了3种数据源类型，分别是：POOLED,UNPOOLED,JNDI -->
            <!-- POOLED 表示支持JDBC数据源连接池 -->
            <!-- UNPOOLED 表示不支持数据源连接池 -->
            <!-- JNDI 表示支持外部数据源连接池 -->
            <dataSource type="POOLED">
                <property name="driver" value="${driver}"/>
                <property name="url" value="${url}"/>
                <property name="username" value="${username}"/>
                <property name="password" value="${password}"/>
            </dataSource>
        </environment>
    </environments>
    <databaseIdProvider type="">
        <property name="" value=""/>
    </databaseIdProvider>
    <mappers>
        <!--编写 sql 语句的mapper xml-->
        <mapper resource="mapper/BlogMapper.xml"/>
    </mappers>
</configuration>